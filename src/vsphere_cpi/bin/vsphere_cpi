#!/usr/bin/env ruby

$LOAD_PATH.unshift File.expand_path('../../lib', __FILE__)

require 'yaml'
require 'ostruct'
require 'logger'
require 'tmpdir'
require 'bosh/cpi'
require 'bosh/cpi/cli'

require 'cloud'
require 'cloud/vsphere'


Bosh::Clouds::Config.configure(OpenStruct.new(
    logger: Bosh::Cpi::Logger.new(STDERR),
    task_checkpoint: nil,
    ))

def get_vc_version(vcenter_hash)
  require 'cloud/vsphere/cpi_http_client'
  require 'cloud/vsphere/retryer'
  require 'cloud/vsphere/logger'
  require 'cloud/vsphere/base_http_client'
  require 'cloud/vsphere/sdk_helpers/log_filter'
  require 'nokogiri'

  begin
    http_client = VSphereCloud::CpiHttpClient.new()
    url = "https://#{vcenter_hash['vcenters'][0]['host']}/sdk/vimServiceVersions.xml"

    response = VSphereCloud::Retryer.new.try do
      resp = http_client.get(url, {})
      if resp.code >= 400
        err = "Could not fetch '#{url}', received status code '#{resp.code}'"
        Bosh::Clouds::Config.logger.warn(err)
        [nil, RuntimeError.new(err)]
      else
        [resp, nil]
      end
    end
    VAPIVersionDiscriminant.vapi_version(Nokogiri.XML(response.body))
  rescue
    '6.5'
  end
end

cpi_config = YAML.load_file(ARGV.shift)

soap_log = StringIO.new

#cpi_lambda now requires 2 arguments context, cpi_api_version
cpi_lambda = lambda do |context, _|
  unless cpi_config.has_key?('cloud') && cpi_config['cloud'].has_key?('properties')
    raise "Could not find cloud properties in the configuration"
  end

  cloud_properties = cpi_config['cloud']['properties']

  if cloud_properties['vcenters'].nil? || cloud_properties['vcenters'].empty?
    cloud_properties['vcenters'] = [{}]
  end
  cloud_properties['vcenters'][0].merge!(context)

  cloud_properties['soap_log'] = soap_log

  $vc_version = get_vc_version(cloud_properties)
  require 'cloud/vsphere'
  Bosh::Clouds::VSphere.new(cloud_properties)
end

cli = Bosh::Cpi::Cli.new(cpi_lambda, soap_log, STDOUT)

cli.run(ARGF.read)
